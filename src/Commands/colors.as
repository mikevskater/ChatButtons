class NadeoColors
{
    array<string> color_characters = {
        "0"
        , "1"
        , "2"
        , "3"
        , "4"
        , "5"
        , "6" 
        , "7" 
        , "8" 
        , "9" 
        , "A" //10
        , "B" //11
        , "C" //12
        , "D" //13
        , "E" //14
        , "F" //15
        };

    array<array<array<int>>> color_grid = {
        {{15,15,15,0},{12,12,12,0},{09,09,09,0},{06,06,06,1},{03,03,03,1},{00,00,00,1},{15,12,00,0},{15,09,00,0},{15,06,00,0},{15,03,00,1},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0}},
        {{09,12,00,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{12,09,00,0},{15,12,03,0},{15,12,06,0},{15,09,06,0},{15,06,03,0},{12,03,00,1},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{12,00,03,1}},
        {{12,15,00,0},{12,15,03,0},{03,03,00,0},{06,06,00,1},{09,09,00,0},{12,12,00,0},{15,15,00,0},{12,12,00,0},{12,06,03,1},{03,00,00,1},{06,00,00,1},{09,00,00,1},{12,00,00,1},{15,00,00,1},{15,03,06,1},{15,00,03,1}},
        {{09,15,00,0},{12,15,06,0},{09,12,03,0},{06,06,03,1},{09,09,03,0},{12,12,03,0},{15,15,03,0},{09,06,00,1},{09,03,00,1},{06,03,03,1},{09,03,03,1},{12,03,03,1},{15,03,03,1},{12,03,06,1},{15,06,09,0},{15,00,06,1}},
        {{06,15,00,0},{09,15,06,0},{06,12,03,0},{06,09,00,1},{09,09,06,0},{12,12,06,0},{15,15,06,0},{09,06,03,1},{06,03,00,1},{09,06,06,1},{12,06,06,0},{15,06,06,0},{09,00,03,1},{12,03,09,1},{15,06,12,0},{15,00,09,1}},
        {{03,15,00,0},{06,15,03,0},{03,09,00,1},{06,12,00,0},{09,15,03,0},{12,12,09,0},{15,15,09,0},{12,09,06,0},{12,06,00,1},{12,09,09,0},{15,09,09,0},{15,03,09,1},{12,00,06,1},{09,00,06,1},{15,03,12,0},{15,00,12,1}},
        {{00,12,00,1},{03,12,00,0},{03,06,00,1},{06,09,03,1},{09,12,06,0},{12,15,09,0},{15,15,12,0},{15,12,09,0},{15,09,03,0},{15,12,12,0},{15,09,12,0},{12,06,09,0},{09,03,06,1},{06,00,03,1},{12,00,09,1},{03,00,03,1}},
        {{03,12,03,0},{06,12,06,0},{00,15,00,0},{03,15,03,0},{06,15,06,0},{09,15,09,0},{12,15,12,0},{-1,-1,-1,0},{-1,-1,00,0},{-1,-1,-1,0},{15,09,12,0},{09,06,09,1},{09,03,09,1},{09,00,09,1},{06,03,06,1},{06,00,06,1}},
        {{00,06,00,1},{03,06,03,1},{00,09,00,1},{03,09,03,1},{06,09,06,0},{09,12,09,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,00,0},{15,12,15,0},{15,09,15,0},{15,06,15,0},{15,03,15,0},{15,00,15,1},{12,06,12,0},{12,03,12,1}},
        {{00,03,00,1},{00,12,03,1},{00,06,03,1},{03,09,06,1},{06,12,09,0},{09,15,12,0},{12,15,15,0},{03,09,15,0},{09,12,15,0},{12,12,15,0},{12,09,15,0},{09,06,12,0},{06,03,09,1},{03,00,06,1},{09,00,12,1},{12,00,12,1}},
        {{00,15,00,0},{03,15,06,0},{00,09,03,1},{00,12,06,0},{03,15,09,0},{09,15,15,0},{09,12,12,0},{00,06,12,1},{06,09,12,0},{09,09,15,0},{09,09,12,0},{09,03,15,1},{06,00,12,1},{06,00,09,1},{12,03,15,1},{12,00,15,1}},
        {{00,15,03,0},{06,15,09,0},{03,12,06,0},{00,09,06,1},{06,15,15,0},{06,12,12,0},{06,09,09,0},{00,03,06,1},{03,06,09,1},{06,06,15,1},{06,06,12,1},{06,06,09,1},{03,00,09,1},{09,03,12,1},{12,06,15,0},{09,00,15,1}},
        {{00,15,06,0},{06,15,12,0},{03,12,09,0},{03,15,15,0},{03,12,12,0},{03,09,09,1},{03,06,06,1},{00,06,09,1},{00,03,09,1},{03,03,15,1},{03,03,12,1},{03,03,09,1},{03,03,06,1},{06,03,12,1},{09,06,15,0},{06,00,15,1}},
        {{00,15,09,0},{03,15,12,0},{00,15,15,0},{00,12,12,0},{00,09,09,1},{00,06,06,1},{00,03,03,1},{03,09,12,0},{03,06,12,1},{00,00,15,1},{00,00,12,1},{00,00,09,1},{00,00,06,1},{00,00,03,1},{06,03,15,1},{03,00,15,1}},
        {{00,12,09,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{00,09,12,1},{03,12,15,0},{06,12,15,0},{06,09,15,0},{03,06,15,1},{00,03,12,1},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{03,06,12,1}},
        {{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{00,12,15,0},{00,09,15,1},{00,06,15,1},{00,03,15,1},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0},{-1,-1,-1,0}}
    };

    array<array<string>> color_grid_codes;
    array<array<vec4>> color_grid_colors;
    array<array<vec4>> color_grid_fonts;
    uint grid_width = 16;
    uint grid_height = 16;
    NadeoColors()
    {
        for(uint y = 0; y < this.color_grid.Length; y++)
        {
            array<string> row;
            array<vec4> row_colors;
            array<vec4> row_fonts;
            for(uint x = 0; x < this.color_grid[y].Length; x++)
            {
                string code;
                vec4 colors;
                if(this.color_grid[y][x][0] == -1)
                {
                    code = "-1";
                    colors = vec4(-1,-1,-1,-1);
                }
                else
                {
                    code = "$" + this.color_characters[this.color_grid[y][x][0]] + this.color_characters[this.color_grid[y][x][1]] + this.color_characters[this.color_grid[y][x][2]];
                    colors = vec4(float(this.color_grid[y][x][0])/15.,float(this.color_grid[y][x][1])/15.,float(this.color_grid[y][x][2])/15.,1.);
                }
                row.InsertLast(code);
                row_colors.InsertLast(colors);
                row_fonts.InsertLast(vec4(float(this.color_grid[y][x][3]),float(this.color_grid[y][x][3]),float(this.color_grid[y][x][3]),1.));
            }
            this.color_grid_codes.InsertLast(row);
            this.color_grid_colors.InsertLast(row_colors);
            this.color_grid_fonts.InsertLast(row_fonts);
        }
    }
    string GetColorCode(uint x, uint y)
    {
        if(x < 0 || x >= this.color_grid_codes[y].Length || y < 0 || y >= this.color_grid_codes.Length)
        {
            return "-1";
        }
        return this.color_grid_codes[y][x];
    }
    vec4 GetColor(uint x, uint y)
    {
        if(x < 0 || x >= this.color_grid_colors[y].Length || y < 0 || y >= this.color_grid_colors.Length)
        {
            return vec4(-1,-1,-1,-1);
        }
        return this.color_grid_colors[y][x];
    }
    vec4 GetFontColor(uint x, uint y)
    {
        if(x < 0 || x >= this.color_grid_fonts[y].Length || y < 0 || y >= this.color_grid_fonts.Length)
        {
            return vec4(-1,-1,-1,-1);
        }
        return this.color_grid_fonts[y][x];
    }
    array<array<string>> GetColorGridCodes()
    {
        return this.color_grid_codes;
    }
    array<array<vec4>> GetColorGridColors()
    {
        return this.color_grid_colors;
    }
    array<array<vec4>> GetColorGridFonts()
    {
        return this.color_grid_fonts;
    }
    array<string> GetColorCharacters()
    {
        return this.color_characters;
    }
    array<array<array<int>>> GetColorGrid()
    {
        return this.color_grid;
    }
    uint GetGridWidth()
    {
        return this.grid_width;
    }
    uint GetGridHeight()
    {
        return this.grid_height;
    }
}

// class NadeoColors
NadeoColors colors = NadeoColors();
    
                